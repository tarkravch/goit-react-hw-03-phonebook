{"version":3,"sources":["components/Container/Container.module.css","components/contact-form/ContactForm.module.css","components/contact-form/ContactForm.js","components/contact-list/ContactList.js","components/filter/Filter.js","components/Container/Container.js","App.js","index.js","components/contact-list/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","console","log","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","shortid","generate","numberInputId","this","className","styles","form","htmlFor","form__label","form__input","type","pattern","title","required","onChange","id","form__btn","Component","ContactList","items","onDeleteContact","list","map","itemName","list__item","onClick","list__btn","Filter","Container","children","container","App","contacts","initialContacts","filter","deleteContact","itemNameId","prevState","contact","contactCheck","find","alert","addContact","filterByName","getVisibleContacts","normalizedFilter","toLowerCase","includes","prevProp","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70ffef21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3fbpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__pSP2s\",\"form__label\":\"ContactForm_form__label__3RIa6\",\"form__input\":\"ContactForm_form__input__3ZurP\",\"form__btn\":\"ContactForm_form__btn__34_DT\"};","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport styles from \"../contact-form/ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    console.log(this.state.name);\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onSubmit(this.state); /* передаємо значення на проп onSubmit */\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.form}>\r\n          <label htmlFor={this.nameInputId} className={styles.form__label}>\r\n            Name\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId} className={styles.form__label}>\r\n            Number\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.form__btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styles from \"../contact-list/ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ items, onDeleteContact }) => (\r\n  <div>\r\n    <ul className={styles.list}>\r\n      {items.map((itemName) => (\r\n        <li key={itemName.id} className={styles.list__item}>\r\n          {itemName.name}: {itemName.number}\r\n          <button\r\n            onClick={() => onDeleteContact(itemName.id)}\r\n            className={styles.list__btn}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.object.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from \"../Container/Container.module.css\";\r\nconst Container = ({ children }) => (\r\n  <>{<div className={styles.container}>{children}</div>}</>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/contact-form/ContactForm\";\nimport ContactList from \"./components/contact-list/ContactList\";\nimport Filter from \"./components/filter/Filter\";\nimport initialContacts from \"./components/contactArr.json\";\nimport Container from \"./components/Container/Container\";\nimport shortid from \"shortid\";\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    contacts: initialContacts,\n    filter: \"\",\n  };\n\n  componentDidMount(prevProp, prevState) {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  // після кожного оновлення\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  deleteContact = (itemNameId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== itemNameId\n      ),\n    }));\n  };\n\n  contactCheck = ({ name, number }) => {\n    const checkedContact = this.state.contacts.find((contact) => {\n      if (contact.name === name) {\n        throw alert(`${name} is already in the contacts`);\n      }\n    });\n    return this.addContact({ name, number });\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  filterByName = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n    console.log(this.state.filter);\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    console.log(normalizedFilter);\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.contactCheck} />\n          <h2>Contacts</h2>\n          <p>Find contacts by name</p>\n          <Filter value={this.state.filter} onChange={this.filterByName} />\n          <ContactList\n            items={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__GdSNi\",\"list__item\":\"ContactList_list__item__3h5k2\",\"list__btn\":\"ContactList_list__btn__BVKhh\"};"],"sourceRoot":""}